{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/services/auth-guard.service.ts","./src/app/auth/services/authentication.service.ts","./src/app/auth/services/jwt-interceptor.service.ts","./src/app/core/components/authorisation/authorisation.component.ts","./src/app/core/components/authorisation/authorisation.component.html","./src/app/core/core.module.ts","./src/app/data/api/exchange-api.service.ts","./src/app/data/api/lesson-api.service.ts","./src/app/data/api/occurrence-api.service.ts","./src/app/data/api/subject-api.service.ts","./src/app/data/api/user-api.service.ts","./src/app/data/data.module.ts","./src/app/data/entities/exchangeRequest.ts","./src/app/globals.ts","./src/app/material.module.ts","./src/app/modules/exchanges/components/exchange-request-status-filter/exchange-request-status-filter.component.ts","./src/app/modules/exchanges/components/exchange-request-status-filter/exchange-request-status-filter.component.html","./src/app/modules/exchanges/components/request-tail/request-tail.component.ts","./src/app/modules/exchanges/components/request-tail/request-tail.component.html","./src/app/modules/exchanges/enums/entityType.enum.ts","./src/app/modules/exchanges/exchanges.module.ts","./src/app/modules/exchanges/layouts/exchanges/exchanges.component.ts","./src/app/modules/exchanges/layouts/exchanges/exchanges.component.html","./src/app/modules/exchanges/layouts/incoming-exchanges/incoming-exchanges.component.ts","./src/app/modules/exchanges/layouts/incoming-exchanges/incoming-exchanges.component.html","./src/app/modules/exchanges/layouts/outgoing-exchanges/outgoing-exchanges.component.ts","./src/app/modules/exchanges/layouts/outgoing-exchanges/outgoing-exchanges.component.html","./src/app/modules/exchanges/services/order-handler.service.ts","./src/app/modules/mobile-blocker/components/mobile-blocker/mobile-blocker.component.ts","./src/app/modules/mobile-blocker/components/mobile-blocker/mobile-blocker.component.html","./src/app/modules/mobile-blocker/mobile-blocker.module.ts","./src/app/modules/mobile-blocker/services/mobile-blocker.service.ts","./src/app/modules/queues/components/occurrence-tail/occurrence-tail.component.ts","./src/app/modules/queues/components/occurrence-tail/occurrence-tail.component.html","./src/app/modules/queues/layouts/queue/queue.component.ts","./src/app/modules/queues/layouts/queue/queue.component.html","./src/app/modules/queues/queues.module.ts","./src/app/modules/schedule/components/divider/divider.component.ts","./src/app/modules/schedule/components/divider/divider.component.html","./src/app/modules/schedule/components/schedule/schedule.component.ts","./src/app/modules/schedule/components/schedule/schedule.component.html","./src/app/modules/schedule/enums/entityType.enum.ts","./src/app/modules/schedule/schedule.module.ts","./src/app/modules/settings/components/settings-navbar/settings-navbar.component.ts","./src/app/modules/settings/components/settings-navbar/settings-navbar.component.html","./src/app/modules/settings/layouts/change-password/change-password.component.ts","./src/app/modules/settings/layouts/change-password/change-password.component.html","./src/app/modules/settings/layouts/credits/credits.component.ts","./src/app/modules/settings/layouts/credits/credits.component.html","./src/app/modules/settings/settings.module.ts","./src/app/pipes/hour-printer.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/shared/components/navbar/navbar.component.ts","./src/app/shared/components/navbar/navbar.component.html","./src/app/shared/services/error.service.ts","./src/app/shared/services/snack-bar-handler.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuardService } from './auth/services/auth-guard.service';\nimport { AuthorisationComponent } from './core/components/authorisation/authorisation.component';\nimport { ExchangesComponent } from './modules/exchanges/layouts/exchanges/exchanges.component';\nimport { IncomingExchangesComponent } from './modules/exchanges/layouts/incoming-exchanges/incoming-exchanges.component';\nimport { OutgoingExchangesComponent } from './modules/exchanges/layouts/outgoing-exchanges/outgoing-exchanges.component';\nimport { MobileBlockerComponent } from './modules/mobile-blocker/components/mobile-blocker/mobile-blocker.component';\nimport { MobileBlockerService } from './modules/mobile-blocker/services/mobile-blocker.service';\nimport { QueueComponent } from './modules/queues/layouts/queue/queue.component';\nimport { ScheduleComponent } from './modules/schedule/components/schedule/schedule.component';\nimport { ChangePasswordComponent } from './modules/settings/layouts/change-password/change-password.component';\nimport { CreditsComponent } from './modules/settings/layouts/credits/credits.component';\n\nconst routes: Routes = [\n  { path: 'auth', component: AuthorisationComponent },\n  { path: 'exchanges', component: ExchangesComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'exchanges/incoming', component: IncomingExchangesComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'exchanges/outgoing', component: OutgoingExchangesComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'schedule', component: ScheduleComponent, canActivate: [AuthGuardService] },\n  { path: 'settings/change-password', component: ChangePasswordComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'settings/credits', component: CreditsComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'settings', redirectTo: '/settings/change-password', pathMatch: 'full'},\n  { path: 'queue', component: QueueComponent, canActivate: [AuthGuardService && MobileBlockerService] },\n  { path: 'mobile-block', component: MobileBlockerComponent },\n  { path: '**', redirectTo: '/schedule', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'QueueAngular';\n}\n","<router-outlet></router-outlet>","import { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from './core/core.module';\nimport { DatePipe } from '@angular/common';\nimport { SharedModule } from './shared/shared.module';\nimport { ExchangesModule } from './modules/exchanges/exchanges.module';\nimport { ScheduleModule } from './modules/schedule/schedule.module';\nimport { DataModule } from '../app/data/data.module';\nimport { Globals } from './globals';\nimport { JwtInterceptor } from './auth/services/jwt-interceptor.service';\nimport { ErrorService } from './shared/services/error.service';\nimport { SettingsModule } from './modules/settings/settings.module';\nimport { QueuesModule } from './modules/queues/queues.module';\nimport { PipesModule } from './pipes/pipes.module';\nimport { MobileBlockerModule } from './modules/mobile-blocker/mobile-blocker.module'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    CoreModule,\n    SharedModule,\n    ExchangesModule,\n    ScheduleModule,\n    DataModule,\n    SettingsModule,\n    QueuesModule,\n    PipesModule,\n    MobileBlockerModule\n  ],\n  providers: [\n    DatePipe,\n    Globals,\n    { \n      provide: HTTP_INTERCEPTORS, \n      useClass: JwtInterceptor, \n      multi: true \n    },\n    {\n      provide: ErrorHandler,\n      useClass: ErrorService\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    public auth: AuthenticationService, \n    public router: Router\n  ) {}\n  \n    canActivate(): boolean {\n    if (this.auth.isUserAuthenticated()) {\n      return true;\n    }\n    this.router.navigateByUrl('/auth');\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserApiService } from 'src/app/data/api/user-api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n    private router: Router,\n    private userApi: UserApiService\n  ) { }\n\n  logIn(username: string, password: string): Observable<void> {\n    if(localStorage.getItem('token') != null) this.logOut();\n    return this.userApi.authUser(username, password).pipe(\n      map(authResponse => {\n        localStorage.setItem('token', authResponse.token);\n      }));\n  }\n\n  logOut(): void {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/auth');\n  }\n\n  isUserAuthenticated(): boolean {\n    if(localStorage.getItem('token') == null || this.isTokenExpired(jwt_decode<JwtPayload>(localStorage.getItem('token')).exp))\n      return false; \n    else return true;\n  }\n\n  private isTokenExpired(token: number): boolean {\n    return (Math.floor((new Date).getTime() / 1000)) >= token;\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SnackBarHandlerService } from 'src/app/shared/services/snack-bar-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor{\n\n  constructor(\n    private router: Router,\n    private snackBar: SnackBarHandlerService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    \n    return next.handle(request).pipe(tap((event: HttpEvent<any>) => {}, (err: any) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          this.router.navigateByUrl('/auth');\n          if (err.error.message != '') this.snackBar.openBasicSnackBar(err.error.message);\n          else this.snackBar.openBasicSnackBar('Session expired, log in again.');\n        }\n      }\n    }));\n  }\n\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Globals } from 'src/app/globals';\nimport { AuthenticationService } from 'src/app/auth/services/authentication.service';\n\n@Component({\n  selector: 'app-authorisation',\n  templateUrl: './authorisation.component.html',\n  styleUrls: ['./authorisation.component.scss']\n})\nexport class AuthorisationComponent implements OnInit {\n  loading = false;\n  version: string = this.globals.VERSION;\n\n  loginForm: FormGroup = this.formBuilder.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required]\n});\n\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private globals: Globals\n    ) { }\n\n  ngOnInit(): void {}\n\n  logIn(form: NgForm): void {\n    this.loading = true;\n\n    this.authenticationService.logIn(form.value.username, form.value.password).subscribe(\n      () => this.router.navigateByUrl('schedule'),\n      error => this.loading = false\n    );\n  }\n}\n","<div class=\"layout-organizer\">\n  <div class=\"triangle triangle-left triangle__big--left\"></div>\n  <div class=\"triangle triangle-right triangle__big--right\"></div>\n  <section>\n        <div class=\"login-container\">\n            <p class=\"logo\">Que</p>\n            <form class=\"login-form\" #form=\"ngForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"logIn(form)\">\n                <mat-form-field>\n                    <mat-label>Username</mat-label>\n                    <input matInput type=\"text\" maxlength=\"25\" name=\"username\" formControlName=\"username\" autocomplete=\"on\">\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" maxlength=\"30\" name=\"password\" formControlName=\"password\" autocomplete=\"on\">\n                </mat-form-field>\n\n                <button class=\"login-button\" [disabled]=\"loading\" mat-raised-button type=\"submit\">\n                    <mat-spinner *ngIf=\"loading; else login\" class=\"loading\" [diameter]=\"24\" ></mat-spinner>\n                    <ng-template #login>\n                        <p class=\"login-text\">Login</p>\n                    </ng-template>\n\n                </button>\n            </form>\n        </div>\n        <div class=\"logo-container\">\n            <div class=\"triangle triangle-left\"></div>\n            <p class=\"logo\">Que</p>\n            <div class=\"triangle triangle-right\"></div>\n        </div>\n    </section>\n    <p class=\"version\">v{{ version }}</p>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { AuthorisationComponent } from './components/authorisation/authorisation.component';\nimport { SharedModule } from '../shared/shared.module'\n\n\n@NgModule({\n  declarations: [AuthorisationComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    AuthorisationComponent\n  ]\n})\nexport class CoreModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Globals } from '../../globals';\nimport { ExchangeRequest } from '../entities/exchangeRequest'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExchangeApiService {\n\n  constructor(\n    private http: HttpClient,\n    private globals: Globals,\n  ) { }\n\n  submitRequest(fromUserId: number, fromLessonId: number, fromIndex: number, toUserId: number, toLessonId: number, toIndex: number) {\n    const requestUrl = `${this.globals.BASE_URL}/exchanges/requests/submit`;\n    return this.http.post(requestUrl, {fromUserId, fromLessonId, fromIndex, toUserId, toLessonId, toIndex}, {observe: 'response'});\n  }\n\n  getRequestsToUser() {\n    const requestUrl = `${this.globals.BASE_URL}/exchanges/requests/to`;\n    return this.http.get<ExchangeRequest[]>(requestUrl);\n  }\n\n  getRequestsFromUser() {\n    const requestUrl = `${this.globals.BASE_URL}/exchanges/requests/from`;\n    return this.http.get<ExchangeRequest[]>(requestUrl);\n  }\n\n  acceptRequest(requestId: number) {\n    const requestUrl = `${this.globals.BASE_URL}/exchanges/requests/accept/${requestId}`;\n    return this.http.get(requestUrl); \n  }\n\n  declineRequest(requestId: number) {\n    const requestUrl = `${this.globals.BASE_URL}/exchanges/requests/decline/${requestId}`;\n    return this.http.get(requestUrl); \n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Globals } from '../../globals'\nimport { Lesson } from '../entities/lesson';\nimport { User } from '../entities/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonApiService {\n\n  constructor(\n    private http: HttpClient,\n    private globals: Globals\n  ) { }\n\n  getLessons(subjectId: string): Observable<Lesson[]> {\n    const requestUrl = `${this.globals.BASE_URL}/subjects/${subjectId}/lessons`;\n    return this.http.get<Lesson[]>(requestUrl);\n  }\n\n  getLesson(lessonId: string): Observable<Lesson> {\n    const requestUrl = `${this.globals.BASE_URL}/lessons/${lessonId}`;\n    return this.http.get<Lesson>(requestUrl);\n  }\n\n  getUsers(lessonId: string): Observable<User[]> {\n    const requestUrl = `${this.globals.BASE_URL}/lessons/${lessonId}/users`;\n    return this.http.get<User[]>(requestUrl);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Predicate } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter, flatMap, take, toArray } from 'rxjs/operators';\nimport { Globals } from '../../globals';\nimport { LessonOccurrence } from '../entities/lessonOccurrence'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OccurrenceApiService {\n\n  constructor(\n    private http: HttpClient,\n    private globals: Globals\n  ) { }\n\n  getPast(num: number): Observable<LessonOccurrence[]> {\n    const requestUrl = `${this.globals.BASE_URL}/occurrences/past/${num}`;\n    return this.http.get<LessonOccurrence[]>(requestUrl);\n  }\n\n  getPastForLesson(lessonId: string, num: number): Observable<LessonOccurrence[]> {\n    const requestUrl = `${this.globals.BASE_URL}/occurrences/past/${lessonId}/${num}`;\n    return this.http.get<LessonOccurrence[]>(requestUrl);\n  }\n\n  getLastOccurrence(): Observable<LessonOccurrence> {\n    const requestUrl = `${this.globals.BASE_URL}/occurrences/past/1`;\n    return this.http.get<LessonOccurrence[]>(requestUrl).pipe(\n      flatMap(occurrences => occurrences),\n      take(1)\n    );\n  }\n\n  getNext(lessonId: string, num: number): Observable<LessonOccurrence[]> {\n    const requestUrl = `${this.globals.BASE_URL}/occurrences/next/${lessonId}/${num}`;\n    return this.http.get<LessonOccurrence[]>(requestUrl);\n  }\n\n  filterOccurrences(lessonId: string, predicate: Predicate<LessonOccurrence>, num: number) {\n    return this.getNext(lessonId, num)\n    .pipe(\n      flatMap(occurrences => occurrences),\n      filter(predicate),\n      toArray()\n    );\n  }\n\n  updateOccurrences() {\n    const requestUrl = `${this.globals.BASE_URL}/occurrences/update`;\n    return this.http.get(requestUrl);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Globals } from 'src/app/globals';\nimport { Subject } from '../entities/subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectApiService {\n\n  constructor(\n    private http: HttpClient,\n    private globals: Globals\n  ) { }\n\n  getAllSubjects(): Observable<Subject[]>{\n    const requestUrl = `${this.globals.BASE_URL}/subjects`;\n    return this.http.get<Subject[]>(requestUrl);\n  }\n\n  getSubject(subjectId: string): Observable<Subject> {\n    const requestUrl = `${this.globals.BASE_URL}/subjects/${subjectId}`;\n    return this.http.get<Subject>(requestUrl);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { AuthResponse } from '../entities/authResponse'\nimport { Globals } from 'src/app/globals';\nimport { User } from '../entities/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApiService {\n\n  constructor(\n    private http: HttpClient,\n    private globals: Globals\n  ) { }\n\n  authUser(username: string, password: string) {\n    const requestUrl = `${this.globals.BASE_URL}/auth`;\n    return this.http.post<AuthResponse>(requestUrl, {username, password});\n  }\n\n  getUsername(userId: number) {\n    const requestUrl = `${this.globals.BASE_URL}/user/${userId}`;\n    return this.http.get<User>(requestUrl);\n  } \n\n  changePassword(oldPassword: string, newPassword: string) {\n    const requestUrl = `${this.globals.BASE_URL}/account/changepass`;\n    return this.http.post(requestUrl, {oldPassword, newPassword}, {observe: 'response'});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DataModule { }\n","export interface ExchangeRequest {\n    id: number,\n    fromUserId: number,\n    fromLessonId: number,\n    fromIndex: string,\n    toUserId: number,\n    toLessonId: number,\n    toIndex: string,\n    status: RequestStatus,\n    resolvementTime: number,\n    fromUsername: string;\n    toUsername: string;\n    fromDate: string;\n    toDate: string;\n    fromTime: string;\n    toTime: string;\n    fromSubjectName: string;\n    toSubjectName: string;\n}\n\nexport enum RequestStatus {\n    PENDING = 'PENDING',\n    ACCEPTED = 'ACCEPTED',\n    DECLINED = 'DECLINED',\n    INVALID = 'INVALID'\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Globals {\n  BASE_URL = 'https://queapi.jupw.net/api/v1';\n  VERSION = '1.0.0';\n}","import { NgModule } from '@angular/core';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class MaterialModule {}","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Subject as rxSubject, Subscription } from 'rxjs';\nimport { ExchangeRequest, RequestStatus } from 'src/app/data/entities/exchangeRequest';\nimport { OrderHandlerService } from '../../services/order-handler.service';\n\n@Component({\n  selector: 'app-exchange-request-status-filter',\n  templateUrl: './exchange-request-status-filter.component.html',\n  styleUrls: ['./exchange-request-status-filter.component.scss']\n})\nexport class ExchangeRequestStatusFilterComponent implements OnInit, OnDestroy {\n  requestStatuses: string[] = ['All', RequestStatus.PENDING, RequestStatus.ACCEPTED, RequestStatus.DECLINED, RequestStatus.INVALID];\n  \n  selectedFilter: string = this.requestStatuses[0];\n\n  @Input() allRequests: ExchangeRequest[];\n  @Input('requestsChange') private allRequestsChange: rxSubject<ExchangeRequest[]> = new rxSubject<ExchangeRequest[]>();\n  @Output('filteredRequests') filteredRequests: EventEmitter<ExchangeRequest[]> = new EventEmitter<ExchangeRequest[]>();\n\n  private subscription: Subscription\n\n  constructor(\n    private orderHandler: OrderHandlerService\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription = this.allRequestsChange.subscribe(requests => {\n      this.allRequests = requests \n      this.filterRequests(); \n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  addFilteredRequests(requests: ExchangeRequest[]) {\n    this.filteredRequests.emit(this.orderHandler.setPendingFirst(requests));\n  }\n\n  filterRequests() {\n    switch(this.selectedFilter) {\n      case 'All':       this.addFilteredRequests(this.allRequests); break;\n      case RequestStatus.PENDING:   this.addFilteredRequests(this.allRequests.filter(request => request.status === RequestStatus.PENDING.toString())); break;\n      case RequestStatus.ACCEPTED:  this.addFilteredRequests(this.allRequests.filter(request => request.status === RequestStatus.ACCEPTED.toString())); break;\n      case RequestStatus.DECLINED:  this.addFilteredRequests(this.allRequests.filter(request => request.status === RequestStatus.DECLINED.toString())); break;\n      case RequestStatus.INVALID:   this.addFilteredRequests(this.allRequests.filter(request => request.status === RequestStatus.INVALID.toString())); break;\n    }\n  }\n}\n","<section>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Filter by status</mat-label>\n        <mat-select [(value)]=\"selectedFilter\" (selectionChange)=\"filterRequests()\">\n            <mat-option *ngFor=\"let status of requestStatuses\" value={{status}}>{{status}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</section>","import { Component, Input, OnInit } from '@angular/core';\nimport { TooltipPosition } from '@angular/material/tooltip';\n\nimport { ExchangeApiService } from 'src/app/data/api/exchange-api.service';\nimport { ExchangeRequest, RequestStatus } from 'src/app/data/entities/exchangeRequest';\n\n@Component({\n  selector: 'app-request-tail',\n  templateUrl: './request-tail.component.html',\n  styleUrls: ['./request-tail.component.scss']\n})\nexport class RequestTailComponent implements OnInit {\n  @Input('request') request: ExchangeRequest;\n  @Input('requestType') requestType: string;\n  person: string;\n  position: TooltipPosition = 'right';\n\n  constructor(\n    private exchangeApi: ExchangeApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.person = this.requestType === 'incoming' ? 'Sender' : 'Receiver';\n  }\n\n\n  acceptRequest(requestId: number) {\n    this.exchangeApi.acceptRequest(requestId).subscribe(() => window.location.reload());\n  }\n\n  declineRequest(requestId: number) {\n    this.exchangeApi.declineRequest(requestId).subscribe(() => window.location.reload());\n  }\n\n  getStatusColor(status: string) {\n    switch(status) {\n      case RequestStatus.ACCEPTED: return 'darkgreen'; \n      case RequestStatus.DECLINED: return '#C13745'; \n      case RequestStatus.PENDING: return 'grey'; \n      case RequestStatus.INVALID: return 'orange'; \n    }\n  }\n}\n","<section>\n    <div class=\"request-container\">\n        <div class=\"container text-container\">\n            <div class=\"positioner\">\n                <p class=\"description\">{{person}}:</p>\n                <h4 class=\"value\" *ngIf=\"person === 'Sender'; else printReceiver\">{{ request.fromUsername }}</h4>\n                <ng-template #printReceiver>\n                    <h4 class=\"value\">{{ request.toUsername }}</h4>\n                </ng-template>\n            </div>\n        </div>\n        <div class=\"container\" id=\"lesson-container\">\n            <div class=\"container text-container\">\n                <p class=\"description\">From:</p>\n                <h4 class=\"value\" *ngIf=\"requestType === 'incoming'; else outgoingFrom\">\n                    {{ request.toSubjectName }}, {{ request.toDate | date: \"dd.MM.yyyy\"}} - {{ request.toTime | hourPrinter }} \n                </h4>\n                <ng-template #outgoingFrom>\n                    <h4 class=\"value\">\n                        {{ request.fromSubjectName }}, {{ request.fromDate | date: \"dd.MM.yyyy\"}} - {{ request.fromTime | hourPrinter }} \n                    </h4>\n                </ng-template>\n            </div>\n            <div class=\"container text-container\">\n                <p class=\"description\">To:</p>\n                <h4 class=\"value\" *ngIf=\"requestType === 'incoming'; else outgoingTo\">\n                    {{ request.fromSubjectName }}, {{ request.fromDate | date: \"dd.MM.yyyy\"}} - {{ request.fromTime | hourPrinter }} \n                </h4>\n                <ng-template #outgoingTo>\n                    <h4 class=\"value\">\n                        {{ request.toSubjectName }}, {{ request.toDate | date: \"dd.MM.yyyy\"}} - {{ request.toTime | hourPrinter }} \n                    </h4>\n                </ng-template>\n            </div>\n        </div>\n        <div class=\"container\">\n            <div class=\"container text-container\">\n                <p class=\"description\">Resolvement date:</p>\n                <div *ngIf=\"request.resolvementTime; else noAction\">\n                    <h4 class=\"value\">{{ request.resolvementTime | date: \"dd.MM.yyyy\"}}</h4>\n                </div>\n                <ng-template #noAction>\n                    <h4 class=\"value\">No action yet</h4>\n                </ng-template>\n            </div>\n            <div class=\"container text-container\">\n                <p class=\"description\">Status:</p>\n                <h4 class=\"value\" [style.color]=\"getStatusColor(request.status)\">{{ request.status }}</h4>\n            </div>\n        </div>\n        <div class=\"action-container\" *ngIf=\"requestType === 'incoming' && request.status === 'PENDING'\">\n            <mat-icon id=\"accept-icon\" class=\"icon\" fontSet=\"material-icons-outlined\" matTooltip=\"Accept request\" [matTooltipPosition]=\"position\" (click)=\"acceptRequest(request.id)\">\n                check_circle\n            </mat-icon>\n            <mat-icon id=\"decline-icon\" class=\"icon\" fontSet=\"material-icons-outlined\" matTooltip=\"Decline request\" [matTooltipPosition]=\"position\" (click)=\"declineRequest(request.id)\">\n                cancel\n            </mat-icon>\n        </div>\n    </div>\n    \n</section>","export enum EntityType {\n    SUBJECT = 'subject',\n    LESSON = 'lesson',\n    OCCURRENCE = 'occurrence'\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExchangesComponent } from './layouts/exchanges/exchanges.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MaterialModule } from 'src/app/material.module';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { IncomingExchangesComponent } from './layouts/incoming-exchanges/incoming-exchanges.component';\nimport { RouterModule } from '@angular/router';\nimport { ExchangeRequestStatusFilterComponent } from './components/exchange-request-status-filter/exchange-request-status-filter.component';\nimport { RequestTailComponent } from './components/request-tail/request-tail.component';\nimport { OutgoingExchangesComponent } from './layouts/outgoing-exchanges/outgoing-exchanges.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n\n\n@NgModule({\n  declarations: [ExchangesComponent, IncomingExchangesComponent, ExchangeRequestStatusFilterComponent, RequestTailComponent, OutgoingExchangesComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RouterModule,\n    PipesModule\n  ],\n  providers: [\n    FormBuilder,\n  ], \n  exports: [\n    ReactiveFormsModule\n  ]\n})\nexport class ExchangesModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\n\nimport { Subject as rxSubject, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { LessonApiService } from 'src/app/data/api/lesson-api.service';\nimport { OccurrenceApiService } from 'src/app/data/api/occurrence-api.service';\nimport { SubjectApiService } from 'src/app/data/api/subject-api.service';\nimport { ExchangeApiService } from 'src/app/data/api/exchange-api.service';\nimport { Lesson } from 'src/app/data/entities/lesson';\nimport { LessonOccurrence } from 'src/app/data/entities/lessonOccurrence';\nimport { Subject } from 'src/app/data/entities/subject';\nimport { EntityType } from '../../enums/entityType.enum'\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { ActiveNavElement } from 'src/app/shared/components/navbar/navbar.component';\nimport { SnackBarHandlerService } from 'src/app/shared/services/snack-bar-handler.service';\n\n@Component({\n  selector: 'app-exchanges',\n  templateUrl: './exchanges.component.html',\n  styleUrls: ['./exchanges.component.scss']\n})\nexport class ExchangesComponent implements OnInit, OnDestroy {\n  activeNavElement: ActiveNavElement = ActiveNavElement.EXCHANGE_SEND;\n  exchangeNavIcon: string = 'sendRequest';\n  userId: string = jwtDecode<JwtPayload>(localStorage.getItem('token')).sub;\n  \n\n\n  //Fields for sender\n  senderSubjects: Subject[] = [];\n\n  senderLessons: Lesson[] = [];\n  private senderLessonsChange: rxSubject<Lesson[]> = new rxSubject<Lesson[]>();\n\n  senderQueue: LessonOccurrence[] = [];\n  private senderQueueChange: rxSubject<LessonOccurrence[]> = new rxSubject<LessonOccurrence[]>();\n\n  currentSenderSubject: Subject;\n  private currentSenderSubjectChange: rxSubject<Subject> = new rxSubject<Subject>();\n\n  currentSenderLesson: Lesson;\n  private currentSenderLessonChange: rxSubject<Lesson> = new rxSubject<Lesson>();\n\n  currentSenderOccurrence: LessonOccurrence;\n  private currentSenderOccurrenceChange: rxSubject<LessonOccurrence> = new rxSubject<LessonOccurrence>();\n\n\n  //Fields for receiver\n  receiverSubjects: Subject[] = [];\n\n  receiverLessons: Lesson[] = [];\n  private receiverLessonsChange: rxSubject<Lesson[]> = new rxSubject<Lesson[]>();\n\n  receiverQueue: LessonOccurrence[] = [];\n  private receiverQueueChange: rxSubject<LessonOccurrence[]> = new rxSubject<LessonOccurrence[]>();\n\n  currentReceiverSubject: Subject;\n  private currentReceiverSubjectChange: rxSubject<Subject> = new rxSubject<Subject>();\n\n  currentReceiverLesson: Lesson;\n  private currentReceiverLessonChange: rxSubject<Lesson> = new rxSubject<Lesson>();\n\n  currentReceiverOccurrence: LessonOccurrence;\n  private currentReceiverOccurrenceChange: rxSubject<LessonOccurrence> = new rxSubject<LessonOccurrence>();\n\n  private subscription: Subscription;\n\n  \n  formGroup: FormGroup = new FormGroup({\n    senderSubject: new FormControl('', Validators.required),\n    senderLesson: new FormControl('', Validators.required),\n    senderDate: new FormControl('', Validators.required),\n    receiverSubject: new FormControl('', Validators.required),\n    receiverLesson: new FormControl('', Validators.required),\n    receiverDate: new FormControl('', Validators.required)\n  });\n\n  constructor(\n    private subjectApi: SubjectApiService,\n    private lessonApi: LessonApiService,\n    private occurrenceApi: OccurrenceApiService,\n    private exchangeApi: ExchangeApiService,\n    private snackBar: SnackBarHandlerService\n  ) { }\n\n  ngOnInit(): void {\n    this.subscriptionHandlerForSender();\n    this.subscriptionHandlerForReceiver();\n    this.registerFormControlCallbacks();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  subscriptionHandlerForSender() {\n    //Subscribe changes for lessons\n    this.subscription = this.senderLessonsChange.subscribe(lessons => this.senderLessons = lessons);\n    this.subscription.add(this.senderQueueChange.subscribe(queue => this.senderQueue = queue));\n\n    //Get entities of subjects, lessons and occurrences from API\n    this.subscription.add(this.subjectApi.getAllSubjects().subscribe(subjects => this.senderSubjects = subjects));\n\n    this.subscription.add(this.currentSenderSubjectChange.pipe(\n      mergeMap(subject => this.lessonApi.getLessons(subject.id))\n    ).subscribe(lessons => {\n      this.senderLessons = lessons;\n      this.senderQueue = [];\n    }));\n\n    this.subscription.add(this.currentSenderLessonChange.pipe(\n      mergeMap(lesson => this.occurrenceApi.filterOccurrences(lesson.id, (occurrence => occurrence.userId === (+this.userId)), 21))\n    )\n    .subscribe(occurrences => {\n      this.senderQueue = occurrences;\n    }));\n  }\n\n  subscriptionHandlerForReceiver() {\n    //Subscribe changes for lessons\n    this.subscription.add(this.receiverLessonsChange.subscribe(lessons => this.receiverLessons = lessons));\n    this.subscription.add(this.receiverQueueChange.subscribe(queue => this.receiverQueue = queue));\n    \n    //Get entities of subjects, lessons and occurrences from API\n    this.subscription.add(this.subjectApi.getAllSubjects().subscribe(subjects => this.receiverSubjects = subjects));\n\n    this.subscription.add(this.currentReceiverSubjectChange.pipe(\n      mergeMap(subject => this.lessonApi.getLessons(subject.id))\n    ).subscribe(lessons => {\n      this.receiverLessons = lessons;\n      this.receiverQueue = [];\n    }));\n\n    this.subscription.add(this.currentReceiverLessonChange.pipe(\n        mergeMap(lesson => this.occurrenceApi.filterOccurrences(lesson.id, (occurrence => occurrence.userId !== (+this.userId)), 21))\n      )\n      .subscribe(occurrences => {\n        this.receiverQueue = occurrences;\n      }));\n  }\n\n  setCurrentSenderObject(type: string, object) {\n    switch(type) {\n      case EntityType.SUBJECT: {\n        this.currentSenderSubject = object;\n        this.currentSenderSubjectChange.next(this.currentSenderSubject);\n        break;\n      }\n      case EntityType.LESSON: {\n        this.currentSenderLesson = object;\n        this.currentSenderLessonChange.next(this.currentSenderLesson);\n        break;\n      }\n      case EntityType.OCCURRENCE: {\n        this.currentSenderOccurrence = object;\n        this.currentSenderOccurrenceChange.next(this.currentSenderOccurrence);\n        break;\n      }\n    }\n  }\n\n  setCurrentReceiverObject(type: string, object) {\n    switch(type) {\n      case EntityType.SUBJECT: {\n        this.currentReceiverSubject = object;\n        this.currentReceiverSubjectChange.next(this.currentReceiverSubject);\n        break;\n      }\n      case EntityType.LESSON: {\n        this.currentReceiverLesson = object;\n        this.currentReceiverLessonChange.next(this.currentReceiverLesson);\n        break;\n      }\n      case EntityType.OCCURRENCE: {\n        this.currentReceiverOccurrence = object;\n        this.currentReceiverOccurrenceChange.next(this.currentReceiverOccurrence);\n        break;\n      }\n    }\n  }\n\n  registerFormControlCallbacks() {\n    (this.formGroup.get('senderSubject') as FormControl).valueChanges.subscribe( () =>\n      (this.formGroup.get('senderLesson') as FormControl).reset('')),\n\n    (this.formGroup.get('senderLesson') as FormControl).valueChanges.subscribe( () =>\n      (this.formGroup.get('senderDate') as FormControl).reset('')),\n\n    (this.formGroup.get('receiverSubject') as FormControl).valueChanges.subscribe( () =>\n      (this.formGroup.get('receiverLesson') as FormControl).reset('')),\n\n    (this.formGroup.get('receiverLesson') as FormControl).valueChanges.subscribe( () => \n      (this.formGroup.get('receiverDate') as FormControl).reset(''))\n  }\n\n  sendExchangeRequest(formDirective: FormGroupDirective) {\n    this.exchangeApi.submitRequest(\n      +(this.userId),\n      +(this.currentSenderLesson.id),\n      this.currentSenderOccurrence.lessonIndex,\n      +(this.currentReceiverOccurrence.userId),\n      +(this.currentReceiverLesson.id),\n      this.currentReceiverOccurrence.lessonIndex,\n    ).subscribe(response => {\n      if (response.status === 200) {\n        this.snackBar.openBasicSnackBar('Exchange request has been sent successfully.');\n        formDirective.resetForm();\n        this.formGroup.reset();\n      } else this.snackBar.openErrorSnackBar('Something went wrong.')\n    });\n  }\n}\n\n","<div class=\"layout-organizer\">\n    <app-navbar [active]=\"activeNavElement\"></app-navbar>\n    <section>\n        <div class=\"forms-container\" >\n            <h4>Your lesson</h4>\n            <form [formGroup]=\"formGroup\" #formDirective=\"ngForm\" (ngSubmit)=\"sendExchangeRequest(formDirective)\">\n                <div class=\"form-part\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Subject</mat-label>\n                        <mat-select formControlName='senderSubject'>\n                            <mat-option *ngFor=\"let subject of senderSubjects\" value=\"{{subject.name}}\" (click)='setCurrentSenderObject(\"subject\", subject)'>\n                                {{subject.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n    \n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Lesson</mat-label>\n                        <mat-select formControlName='senderLesson'>\n                            <mat-option *ngFor=\"let lesson of senderLessons\" value=\"{{lesson.id}}\" (click)='setCurrentSenderObject(\"lesson\", lesson)'>\n                                {{lesson.nextDate | date: 'EEEE'}} - {{lesson.time | hourPrinter}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n    \n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Date</mat-label>\n                        <mat-select formControlName='senderDate'>\n                            <mat-option *ngFor=\"let occurrence of senderQueue\" value=\"{{occurrence.username}}\" (click)='setCurrentSenderObject(\"occurrence\", occurrence)'>\n                                {{ occurrence.date | date: 'dd.MM.yyyy'}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                \n                <mat-icon>keyboard_arrow_down</mat-icon>\n                <h4>Receiver's lesson</h4>\n\n                <div class=\"form-part\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Subject</mat-label>\n                        <mat-select formControlName=\"receiverSubject\">\n                            <mat-option *ngFor=\"let subject of receiverSubjects\" value=\"{{subject.name}}\" (click)='setCurrentReceiverObject(\"subject\", subject)'>\n                                {{subject.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n    \n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Lesson</mat-label>\n                        <mat-select formControlName=\"receiverLesson\">\n                            <mat-option *ngFor=\"let lesson of receiverLessons\" value=\"{{lesson.id}}\" (click)='setCurrentReceiverObject(\"lesson\", lesson)'>\n                                {{lesson.nextDate | date: 'EEEE'}} - {{lesson.time | hourPrinter}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n    \n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>User and Date</mat-label>\n                        <mat-select formControlName=\"receiverDate\">\n                            <mat-option *ngFor=\"let occurrence of receiverQueue\" value=\"{{occurrence.username}}\" (click)='setCurrentReceiverObject(\"occurrence\", occurrence)'>\n                                {{ occurrence.username }} - {{ occurrence.date | date: 'dd.MM.yyyy'}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <button mat-raised-button type=\"submit\" [disabled]=\"!formGroup.valid\">Send request</button>\n            </form>\n            \n        </div>\n    </section>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { ExchangeApiService } from 'src/app/data/api/exchange-api.service';\nimport { ExchangeRequest } from 'src/app/data/entities/exchangeRequest';\nimport { ActiveNavElement } from 'src/app/shared/components/navbar/navbar.component';\n\n@Component({\n  selector: 'app-incoming-exchanges',\n  templateUrl: './incoming-exchanges.component.html',\n  styleUrls: ['./incoming-exchanges.component.scss']\n})\nexport class IncomingExchangesComponent implements OnInit, OnDestroy {\n  activeNavElement: ActiveNavElement = ActiveNavElement.EXCHANGE_INCOMING;\n  exchangeNavIcon: string = 'incomingRequests';\n  requestType: string = 'incoming';\n  \n  allRequests: ExchangeRequest[];\n  allRequestsChange: ReplaySubject<ExchangeRequest[]> = new ReplaySubject<ExchangeRequest[]>();\n  \n  filteredRequests: ExchangeRequest[] = [];\n\n  private subscription: Subscription;\n\n  constructor(\n    private exchangeApi: ExchangeApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchRequests();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  fetchRequests() {\n    this.subscription = this.exchangeApi.getRequestsToUser().subscribe(requests => {\n      this.allRequests = requests;\n      this.allRequestsChange.next(requests);\n    });\n  }\n\n  setFilteredRequests(requests: ExchangeRequest[]) {\n    this.filteredRequests = requests;\n  }\n\n}\n","<div class=\"layout-organizer\">\n    <app-navbar [active]=\"activeNavElement\"></app-navbar>\n    <section>\n        <ng-container *ngIf=\"allRequests; else loading\">\n            <div class=\"filter-container\">\n                <app-exchange-request-status-filter [requestsChange]=\"allRequestsChange\" (filteredRequests)=\"setFilteredRequests($event)\"></app-exchange-request-status-filter>\n            </div>\n            <div class=\"requests-container\" *ngIf=\"filteredRequests.length > 0; else noRequestInfo\">\n                <app-request-tail *ngFor=\"let request of filteredRequests\" [request]=\"request\" [requestType]=\"requestType\"></app-request-tail>\n            </div>\n            <ng-template #noRequestInfo>\n                <h2 class=\"no-request-info\">There is no request that matched selected filters.</h2>\n            </ng-template>\n        </ng-container>\n        <ng-template #loading>\n            <mat-spinner></mat-spinner>\n        </ng-template>\n    </section>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { ExchangeApiService } from 'src/app/data/api/exchange-api.service';\nimport { ExchangeRequest } from 'src/app/data/entities/exchangeRequest';\nimport { ActiveNavElement } from 'src/app/shared/components/navbar/navbar.component';\n\n@Component({\n  selector: 'app-outgoing-exchanges',\n  templateUrl: './outgoing-exchanges.component.html',\n  styleUrls: ['./outgoing-exchanges.component.scss']\n})\nexport class OutgoingExchangesComponent implements OnInit, OnDestroy {\n  activeNavElement: ActiveNavElement = ActiveNavElement.EXCHANGE_OUTGOING;\n  exchangeNavIcon: string = 'outgoingRequests';\n  requestType: string = 'outgoing';\n  \n  allRequests: ExchangeRequest[];\n  allRequestsChange: ReplaySubject<ExchangeRequest[]> = new ReplaySubject<ExchangeRequest[]>();\n  \n  filteredRequests: ExchangeRequest[] = [];\n\n  private subscription: Subscription;\n\n  constructor(\n    private exchangeApi: ExchangeApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchRequests();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  fetchRequests() {\n    this.subscription = this.exchangeApi.getRequestsFromUser().subscribe(requests => {\n      this.allRequests = requests;\n      this.allRequestsChange.next(requests);\n    });\n  }\n\n  setFilteredRequests(requests: ExchangeRequest[]) {\n    this.filteredRequests = requests;\n  }\n}\n","<div class=\"layout-organizer\">\n    <app-navbar [active]=\"activeNavElement\"></app-navbar>\n    <section>\n        <ng-container *ngIf=\"allRequests; else loading\">\n            <div class=\"filter-container\">\n                <app-exchange-request-status-filter [requestsChange]=\"allRequestsChange\" (filteredRequests)=\"setFilteredRequests($event)\"></app-exchange-request-status-filter>\n            </div>\n            <div class=\"requests-container\" *ngIf=\"filteredRequests.length > 0; else noRequestInfo\">\n                <app-request-tail *ngFor=\"let request of filteredRequests\" [request]=\"request\" [requestType]=\"requestType\"></app-request-tail>\n            </div>\n            <ng-template #noRequestInfo>\n                <h2 class=\"no-request-info\">There is no request that matched selected filters.</h2>\n            </ng-template>\n        </ng-container>\n        <ng-template #loading>\n            <mat-spinner></mat-spinner>\n        </ng-template>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { ExchangeRequest, RequestStatus } from 'src/app/data/entities/exchangeRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderHandlerService {\n\n  constructor() { }\n\n  orderByResolvmentDate(requests: ExchangeRequest[]) {\n    return requests.sort((a,b) => new Date(b.resolvementTime).getTime() - new Date(a.resolvementTime).getTime());\n  }\n\n  setPendingFirst(requests: ExchangeRequest[]) {\n    let pendingQueue = requests.filter(request => request.status === RequestStatus.PENDING);\n    let queueWithoutPending = this.orderByResolvmentDate(requests.filter(request => request.status !== RequestStatus.PENDING));\n\n    return pendingQueue.concat(queueWithoutPending);\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-blocker',\n  templateUrl: './mobile-blocker.component.html',\n  styleUrls: ['./mobile-blocker.component.scss']\n})\nexport class MobileBlockerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <p class=\"title\">Que</p>\n    <div class=\"message-container\">\n        <p class=\"message\">Mobile version is not available yet.</p>\n        <p class=\"message\">We are working hard to finish it as fast as possible!</p>\n    </div>\n    <div class=\"triangle-left\"></div>\n    <div class=\"triangle-right\"></div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MobileBlockerComponent } from './components/mobile-blocker/mobile-blocker.component';\n\n\n\n@NgModule({\n  declarations: [MobileBlockerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MobileBlockerComponent\n  ]\n})\nexport class MobileBlockerModule { }\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { SnackBarHandlerService } from 'src/app/shared/services/snack-bar-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MobileBlockerService implements CanActivate {\n    private isSmallScreen: boolean = this.breakpointObserver.isMatched('(max-width: 599px)');\n    private isMediumScreen: boolean = this.breakpointObserver.isMatched('(max-width: 1279px)');\n\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router,\n    private snackBar: SnackBarHandlerService\n  ) {}\n  \n    canActivate(): boolean {\n    if (this.isSmallScreen) {\n      this.router.navigateByUrl('/mobile-block');\n      return false;\n    } else if (this.isMediumScreen && sessionStorage.getItem('firstVisit') == null) {\n      this.snackBar.openNoClosingErrorSnackBar('You may encounter some issues with user interface on you screen size. We are working to fix it, we apologise for inconvinience.');\n      sessionStorage.setItem('firstVisit', 'false');\n      return true;\n    }\n    return true;\n  }\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { LessonOccurrence } from 'src/app/data/entities/lessonOccurrence';\n\n@Component({\n  selector: 'app-occurrence-tail',\n  templateUrl: './occurrence-tail.component.html',\n  styleUrls: ['./occurrence-tail.component.scss']\n})\nexport class OccurrenceTailComponent implements OnInit {\n  @Input('occurrence') occurrence: LessonOccurrence;\n  @Input('pointer') pointer: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"date-container\">\n        <p class=\"date\">{{ occurrence.date | date: \"dd.MM\" }}</p>\n\n    </div>\n    <div class=\"info-container\">\n        <div class=\"value-container\">\n            <p class=\"description\">Subject: </p>\n            <p class=\"value\">{{ occurrence[\"lesson\"][\"subject\"][\"name\"] }}</p>\n        </div>\n        <div class=\"value-container\">\n            <p class=\"description\">Hour: </p>\n            <p class=\"value\">{{ occurrence[\"lesson\"][\"time\"] | hourPrinter }}</p>\n        </div>\n        <p class=\"number\">{{ pointer + 1 }}</p>\n    </div>\n</section>","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Observable, merge } from 'rxjs';\nimport { filter, flatMap, take, tap, toArray } from 'rxjs/operators';\n\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { LessonApiService } from 'src/app/data/api/lesson-api.service';\nimport { OccurrenceApiService } from 'src/app/data/api/occurrence-api.service';\nimport { SubjectApiService } from 'src/app/data/api/subject-api.service';\nimport { LessonOccurrence } from 'src/app/data/entities/lessonOccurrence';\nimport { ActiveNavElement } from 'src/app/shared/components/navbar/navbar.component';\n\n@Component({\n  selector: 'app-queue',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.scss']\n})\nexport class QueueComponent implements OnInit {\n  activeNavElement: ActiveNavElement = ActiveNavElement.QUEUE;\n\n  userId: string = jwtDecode<JwtPayload>(localStorage.getItem('token')).sub;\n\n  userOccurrences: LessonOccurrence[];\n  \n  constructor(\n    private subjectApi: SubjectApiService,\n    private lessonApi: LessonApiService,\n    private occurrenceApi: OccurrenceApiService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.fetchOccurrences(8);\n  }\n\n  fetchOccurrences(num: number) {\n    merge(this.fetchNextUserOccurrences(num), this.fetchPastUserOccurrence()).pipe(\n      toArray(),\n      tap(occurrences => occurrences.sort((a, b) => (+this.datePipe.transform(a.date, 'yyyyMMdd')) - (+this.datePipe.transform(b.date, 'yyyyMMdd')))),\n    ).subscribe(occurrences => this.userOccurrences = occurrences);\n  }\n\n  fetchPastUserOccurrence(): Observable<LessonOccurrence> {\n    return this.occurrenceApi.updateOccurrences().pipe(\n      flatMap(() => this.occurrenceApi.getLastOccurrence()),\n      filter(occurrence => this.isLessonOccurrenceCurrent(occurrence)),\n    );\n  }\n\n  fetchNextUserOccurrences(num: number): Observable<LessonOccurrence> {\n    return this.subjectApi.getAllSubjects().pipe(\n      flatMap(subjects => subjects),\n      flatMap(subject => this.lessonApi.getLessons(subject.id).pipe(\n        flatMap(lessons => lessons),\n        tap(lesson => lesson[\"subject\"] = subject)\n      )),\n      flatMap(lesson => this.occurrenceApi.getNext(lesson.id, 21).pipe(\n        flatMap(occurrences => occurrences),\n        tap(occurrence => occurrence[\"lesson\"] = lesson)\n      )),\n      filter(occurrence => occurrence.userId === (+this.userId)),\n      take(num)\n    );\n  }\n\n  isLessonOccurrenceCurrent(occurrence: LessonOccurrence): boolean {\n    return new Date(this.datePipe.transform(occurrence.date + ', ' + occurrence.time)).getTime() >= new Date().setMinutes(new Date().getMinutes() - 45);\n  }\n\n  \n}\n","<div class=\"layout-organizer\">\n    <app-navbar [active]=\"activeNavElement\"></app-navbar>\n    <section *ngIf=\"userOccurrences; else loading\">\n        <app-occurrence-tail *ngFor=\"let occurrence of userOccurrences; let i = index\" [occurrence]=\"occurrence\" [pointer]=\"i\"></app-occurrence-tail>\n    </section>\n    <ng-template #loading>\n        <mat-spinner></mat-spinner>\n    </ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QueueComponent } from './layouts/queue/queue.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MaterialModule } from 'src/app/material.module';\nimport { OccurrenceTailComponent } from './components/occurrence-tail/occurrence-tail.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n\n\n@NgModule({\n  declarations: [QueueComponent, OccurrenceTailComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    PipesModule\n  ]\n})\nexport class QueuesModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss']\n})\nexport class DividerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"line\"> </div>\n    <mat-icon>navigate_next</mat-icon>\n    <div class=\"line\"> </div>\n</section>","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { SubjectApiService } from 'src/app/data/api/subject-api.service';\nimport { LessonApiService } from 'src/app/data/api/lesson-api.service';\nimport { OccurrenceApiService } from 'src/app/data/api/occurrence-api.service';\nimport { Lesson } from 'src/app/data/entities/lesson';\nimport { Subject } from 'src/app/data/entities/subject';\nimport { LessonOccurrence } from 'src/app/data/entities/lessonOccurrence';\nimport { Subject as rxSubject, Subscription} from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { EntityType } from '../../enums/entityType.enum'\nimport { ActiveNavElement } from 'src/app/shared/components/navbar/navbar.component';\n\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss']\n})\nexport class ScheduleComponent implements OnInit, OnDestroy {\n  activeNavElement: ActiveNavElement = ActiveNavElement.SCHEDULE;\n  \n  subjects: Subject[];\n\n  lessons: Lesson[];\n  private lessonsChange: rxSubject<Lesson[]> = new rxSubject<Lesson[]>();\n\n  queue: LessonOccurrence[];\n  private queueChange: rxSubject<LessonOccurrence[]> = new rxSubject<LessonOccurrence[]>();\n\n  currentSubject: Subject;\n  private currentSubjectChange: rxSubject<Subject> = new rxSubject<Subject>();\n\n  currentLesson: Lesson;\n  private currentLessonChange: rxSubject<Lesson> = new rxSubject<Lesson>();\n\n  private subscription: Subscription;\n\n  constructor(\n    private subjectApi: SubjectApiService,\n    private lessonApi: LessonApiService,\n    private occurrenceApi: OccurrenceApiService,\n  ) { }\n\n  ngOnInit(): void {\n    //Subscribe changes for lessons and queue\n    this.subscription = this.lessonsChange.subscribe(lessons => this.lessons = lessons);\n    this.subscription.add(this.queueChange.subscribe(queue => this.queue = queue)); \n\n    //Get entities of subjects, lessons and occurrences from API\n    this.subscription.add(this.subjectApi.getAllSubjects().subscribe(subjects => this.subjects = subjects));\n\n    this.subscription.add(this.currentSubjectChange.pipe(\n      mergeMap(subject => this.lessonApi.getLessons(subject.id))\n    ).subscribe(lessons => {\n      this.lessons = lessons;\n      this.queue = [];\n    }));\n\n    this.subscription.add(this.currentLessonChange.pipe(\n      mergeMap(lesson => this.occurrenceApi.getNext(lesson.id, 21))\n    ).subscribe(occurrences => this.queue = occurrences));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  setCurrentObject(type: string, object) {\n    switch(type) {\n      case EntityType.SUBJECT: {\n        this.currentSubject = object;\n        this.currentSubjectChange.next(this.currentSubject);\n        break;\n      }\n      case EntityType.LESSON: {\n        this.currentLesson = object;\n        this.currentLessonChange.next(this.currentLesson);        \n        break;\n      }\n    }\n  }\n}\n\n","<div class=\"layout-organizer\">\n    <app-navbar [active]='activeNavElement'></app-navbar>\n    <section>\n        <ng-container *ngIf=\"subjects; else loading\">\n            <div class=\"container\">\n                <mat-selection-list #subject [multiple]=\"false\">\n                    <mat-list-option *ngFor=\"let subject of subjects\" (click)=\"setCurrentObject('subject', subject)\">\n                    {{ subject.name }}\n                    </mat-list-option>\n                </mat-selection-list>\n            </div>\n            <app-divider></app-divider>\n            <div class=\"container\">\n                <mat-selection-list #lesson [multiple]=\"false\">\n                    <mat-list-option *ngFor=\"let lesson of lessons\" (click)=\"setCurrentObject('lesson', lesson)\">\n                    {{ lesson.nextDate | date: \"EEEE\" }}<br>{{ lesson.time | hourPrinter}}\n                    </mat-list-option>\n                </mat-selection-list>\n            </div>\n            <app-divider></app-divider>\n            <div class=\"container\">\n                <mat-list #occurrences>\n                    <mat-list-item class=\"occurrence-tile\" *ngFor=\"let occurrence of queue\">\n                    {{ occurrence.username }}<br>{{ occurrence.date | date: \"dd.MM.yyyy\"}}\n                    </mat-list-item>\n                </mat-list>\n            </div>\n        </ng-container>\n        <ng-template #loading>\n            <mat-spinner></mat-spinner>\n        </ng-template>\n    </section>\n    \n</div>","export enum EntityType {\n    SUBJECT = 'subject',\n    LESSON = 'lesson'\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module'\n\nimport { ScheduleComponent } from './components/schedule/schedule.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { DividerComponent } from './components/divider/divider.component';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  declarations: [ScheduleComponent, DividerComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    PipesModule\n  ],\n  exports: [\n    ScheduleComponent\n  ]\n})\nexport class ScheduleModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TooltipPosition } from '@angular/material/tooltip';\nimport { Router } from '@angular/router';\n\n\n\nexport interface SettingsSidebarOption {\n  icon: string;\n  description: string;\n  link: string;\n  verifier: SettingsSidebarOptionName;\n}\n\nexport enum SettingsSidebarOptionName {\n  CHANGE_PSSWD = 'change_password',\n  CREDITS = 'credits'\n}\n\n@Component({\n  selector: 'app-settings-navbar',\n  templateUrl: './settings-navbar.component.html',\n  styleUrls: ['./settings-navbar.component.scss']\n})\n\nexport class SettingsNavbarComponent implements OnInit {\n  @Input('verifier') activeIcon: SettingsSidebarOptionName; \n  position: TooltipPosition = 'right';\n\n  navList: SettingsSidebarOption[] = [\n    { icon: 'lock', description: 'Change password', link: 'settings/change-password', verifier: SettingsSidebarOptionName.CHANGE_PSSWD },\n    { icon: 'integration_instructions', description: 'Credits', link: 'settings/credits' , verifier: SettingsSidebarOptionName.CREDITS }\n  ];\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {}\n\n  routeTo(link: string) {\n    this.router.navigateByUrl(link);\n  }\n}\n","<section>\n    <mat-icon *ngFor=\"let element of navList\" [class.active]=\"element.verifier === activeIcon\" \n        fontSet=\"material-icons-outlined\" matTooltip={{element.description}}  [matTooltipPosition]=\"position\" (click)=\"routeTo(element.link)\">\n        {{ element.icon }}\n    </mat-icon>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\n\nimport { UserApiService } from 'src/app/data/api/user-api.service';\nimport { SnackBarHandlerService } from 'src/app/shared/services/snack-bar-handler.service';\nimport { SettingsSidebarOptionName } from '../../components/settings-navbar/settings-navbar.component';\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  settingsSidebarVerfier: SettingsSidebarOptionName = SettingsSidebarOptionName.CHANGE_PSSWD;\n  \n  formGroup: FormGroup = new FormGroup({\n    currentPassword: new FormControl('', Validators.required),\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    confirmedNewPassword: new FormControl('', [Validators.required, this.passwordMatch]),\n  });\n\n  constructor(\n    private userApi: UserApiService,\n    private snackBar: SnackBarHandlerService\n  ) { }\n\n  ngOnInit(): void {\n    (this.formGroup.get('newPassword') as FormControl).valueChanges.subscribe(() => {\n      this.formGroup.get('confirmedNewPassword').updateValueAndValidity();\n    });\n  }\n\n  passwordMatch(control: AbstractControl){\n    let newPaswd = control.root.get('newPassword');\n    if (newPaswd && control.value != newPaswd.value) return { passwordMatch: false };   \n    return null;\n}\n\n  changePassword(form: NgForm, formDirective: FormGroupDirective): void {\n    this.userApi.changePassword(form.value.currentPassword, form.value.newPassword)\n      .subscribe(response => {\n        if (response.status === 200) {\n          this.snackBar.openBasicSnackBar(\"Password has been changed successfully.\");\n          formDirective.resetForm();\n          this.formGroup.reset();\n          \n        }\n        else if (response.status !== 403) this.snackBar.openErrorSnackBar(\"Something went wrong.\")\n      });\n  }\n\n}\n","<div class=\"layout-organizer\">\n    <app-navbar></app-navbar>\n    <app-settings-navbar [verifier]=\"settingsSidebarVerfier\"></app-settings-navbar>\n    <section>\n        <div class=\"main-container\" >\n            <h4>Change password</h4>\n            <form #form=\"ngForm\" #formDirective=\"ngForm\" [formGroup]=\"formGroup\" (ngSubmit)=\"changePassword(form, formDirective)\">\n                <mat-form-field>\n                    <mat-label>Current password</mat-label>\n                    <input matInput type=\"password\" name=\"currentPassword\" formControlName=\"currentPassword\" required>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>New password</mat-label>\n                    <input matInput type=\"password\" name=\"newPassword\" formControlName=\"newPassword\" minlength=\"5\" required>\n                    <mat-error>\n                        New password is too short! (5)\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Confirm new password</mat-label>\n                    <input matInput type=\"password\" name=\"confirmedNewPassword\" formControlName=\"confirmedNewPassword\" required>\n                    <mat-error>\n                        Passwords don't match\n                    </mat-error>\n                </mat-form-field>\n\n                <button mat-raised-button type=\"submit\" [disabled]=\"!formGroup.valid\">Change password</button>\n            </form>\n            \n        </div>\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Globals } from 'src/app/globals';\nimport { SettingsSidebarOptionName } from '../../components/settings-navbar/settings-navbar.component';\n\n@Component({\n  selector: 'app-credits',\n  templateUrl: './credits.component.html',\n  styleUrls: ['./credits.component.scss']\n})\nexport class CreditsComponent implements OnInit {\n  settingsSidebarVerfier: SettingsSidebarOptionName = SettingsSidebarOptionName.CREDITS;\n  version: string = this.globals.VERSION;\n\n  constructor(\n    private globals: Globals\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout-organizer\">\n    <app-navbar></app-navbar>\n    <app-settings-navbar [verifier]=\"settingsSidebarVerfier\"></app-settings-navbar>\n    <section>\n        <div class=\"main-container\" >\n            <h2>Credits</h2>\n            <h4>\n                Que is a tool that allows for even, fair and organized distribution of \n                cyclic tasks among the members of a group.\n            </h4>\n            <h3>Authors:</h3>\n            <div class=\"authors-container\">\n                <div class=\"author\">\n                    <p class=\"name\">Jan Undrych</p>\n                    <div class=\"icons-container\">\n                        <a href=\"https://github.com/xsw2-2wsx\"><img src=\"../../../../../assets/icon-github.svg\" class=\"icon\"></a>\n                        <a href=\"https://www.linkedin.com/in/jan-undrych-98a8b5204/\"><img src=\"../../../../../assets/icon-linkedin.svg\" class=\"icon\"></a>\n                    </div>\n                </div>\n                <div class=\"author\">\n                    <p class=\"name\">Piotr Wiórek</p>\n                    <div class=\"icons-container\">\n                        <a href=\"https://github.com/pwiorek\"><img src=\"../../../../../assets/icon-github.svg\" class=\"icon\"></a>\n                        <a href=\"https://www.linkedin.com/in/piotr-wi%C3%B3rek-6448ab196/\"><img src=\"../../../../../assets/icon-linkedin.svg\" class=\"icon\"></a>\n                    </div>\n                </div>\n            </div>\n            <a href=\"https://github.com/Que-App\"><img src=\"../../../../../assets/icon-github.svg\" class=\"big-icon\"></a>\n            <p>Project's Github</p>\n            <p class=\"version\">Version: {{ version }}</p>\n        </div>\n    </section>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChangePasswordComponent } from './layouts/change-password/change-password.component';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { MaterialModule } from '../../material.module';\nimport { SettingsNavbarComponent } from './components/settings-navbar/settings-navbar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreditsComponent } from './layouts/credits/credits.component';\n\n\n@NgModule({\n  declarations: [ChangePasswordComponent, SettingsNavbarComponent, CreditsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SettingsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'hourPrinter'\n})\nexport class HourPrinterPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): string {\n    let stringArray = value.split(':');\n    return stringArray[0] + ':' + stringArray[1];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HourPrinterPipe } from './hour-printer.pipe';\n\n\n\n@NgModule({\n  declarations: [HourPrinterPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    HourPrinterPipe,\n  ]\n})\nexport class PipesModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from 'src/app/auth/services/authentication.service';\n\n\nexport interface navElement {\n  icon: string;\n  text: string;\n  link: string;\n  verifier: ActiveNavElement;\n}\n\nexport enum ActiveNavElement {\n  SCHEDULE = 'schedule',\n  EXCHANGE_SEND = 'exchange_send',\n  EXCHANGE_INCOMING = 'exchange_incoming',\n  EXCHANGE_OUTGOING = 'exchange_outgoing',\n  QUEUE = 'queue',\n  NOTES = 'notes'\n}\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\n\nexport class NavbarComponent implements OnInit {\n  @Input('active') activeNavElement: ActiveNavElement;\n\n  list: navElement[] = [\n    { icon: 'event', text: 'SCHEDULE', link: 'schedule', verifier: ActiveNavElement.SCHEDULE},\n    { icon: 'swap_horiz', text: 'EXCHANGE' + '\\n' + 'REQUEST', link: 'exchanges', verifier: ActiveNavElement.EXCHANGE_SEND},\n    { icon: 'save_alt', text: 'INCOMING' + '\\n' + 'REQUESTS', link: 'exchanges/incoming', verifier: ActiveNavElement.EXCHANGE_INCOMING},\n    { icon: 'publish', text: 'OUTGOING' + '\\n' + 'REQUESTS', link: 'exchanges/outgoing', verifier: ActiveNavElement.EXCHANGE_OUTGOING},\n    { icon: 'accessibility_new', text: 'YOUR' + '\\n' + 'QUEUE', link: 'queue', verifier: ActiveNavElement.QUEUE},\n    { icon: 'description', text: 'NOTES', link: 'https://zskpoznan.sharepoint.com/sites/Notatki2B/Shared%20Documents/Forms/AllItems.aspx', verifier: ActiveNavElement.NOTES}\n  ]\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) { }\n\n  ngOnInit(): void {}\n\n  routeTo(location: string) {\n    if (location.includes('https://')) window.open(location, '_blank');\n    else this.router.navigateByUrl(location);\n  }\n\n  logOut() {\n    this.authenticationService.logOut();\n  }\n\n\n}\n\n","<section>\n    <div class=\"titlebar\">\n        <p class=\"titlebar-item title\">Que</p>\n        <div class=\"titlebar-item icons-container\">\n            <mat-icon class=\"icon\" fontSet=\"material-icons-outlined\" (click)=\"logOut()\">meeting_room</mat-icon>\n            <mat-icon class=\"icon\" id=\"settings-icon\" fontSet=\"material-icons-outlined\" (click)=\"routeTo('settings')\">settings</mat-icon>\n        </div>\n    </div>\n    <div class=\"navbar\">\n        <div class=\"navbar-tail\" [class.active-navbar-tail]=\"tail.verifier === activeNavElement\" *ngFor='let tail of list' (click)=\"routeTo(tail.link)\">\n            <mat-icon fontSet=\"material-icons-outlined\">{{ tail.icon }}</mat-icon>\n            <p>{{ tail.text }}</p>\n        </div>\n    </div>\n</section>","import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\n\nimport { SnackBarHandlerService } from './snack-bar-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService implements ErrorHandler {\n\n  constructor(\n    private snackBar: SnackBarHandlerService\n  ) { }\n\n  handleError(error: any) {\n    console.error(error);\n    if (Error instanceof HttpErrorResponse) {\n      this.snackBar.openErrorSnackBar('Sorry, something went wrong.');\n      console.error(error);\n    } else {\n      if (error.status != 401) {\n        this.snackBar.openErrorSnackBar(error.error.message);\n        console.error(error);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarHandlerService {\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  openBasicSnackBar(message: string) {\n    this.snackBar.open(message, '', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      panelClass: ['basic-snackbar']\n    })\n  }\n\n  openErrorSnackBar(message: string) {\n    this.snackBar.open(message, '', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      panelClass: ['error-snackbar']\n    })\n  }\n\n  openNoClosingErrorSnackBar(message: string) {\n    this.snackBar.open(message, 'Close', {\n      duration: 0,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      panelClass: ['error-snackbar']\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { MaterialModule } from '../material.module';\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    NavbarComponent,\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}